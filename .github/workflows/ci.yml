name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'

jobs:
  test:
    environment: Secrets
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run python -m pytest tests/
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi

      - name: Lint (flake8 + black)
        run: |
          poetry run flake8 .
          poetry run black --check .

  frontend-e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Cypress system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xvfb \
            libgtk2.0-0 \
            libgtk-3-0 \
            libgbm-dev \
            libnotify-dev \
            libnss3 \
            libxss1
          sudo apt-get install -y libasound2 || sudo apt-get install -y libasound2t64

      - name: Install npm dependencies
        run: npm ci

      - name: Run Cypress end-to-end tests
        env:
          CI: '1'
        run: npm run test:e2e

      